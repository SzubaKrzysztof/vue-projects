<div id="cart-page" class="cart-page container">
  <div class="cart-section">
    
    <div class="cart-table">
      
       <transition-group name="fade">
         <div v-show="!loading">
            <template v-if="cart.items.length > 0">
              
                  <div class="cart-row" v-for="item in cart.items" :key="item.variant_id" class="line">
                    <div class="cart-item-title" v-html="item.title"></div>
                    <img :src="item.image">
                    <div>
                      <div class="cart-item-price" v-html="item.formatted_line_price"></div>
                      <label>
                        Qty
                        <input type="number" class="cart-item-qty" v-model="item.quantity" @change="updateCart(item.variant_id, item.quantity )">
                      </label>
                    </div>
                    <div class="cart-item-remove" @click="deleteProduct(item.variant_id)"><img src="{{ 'iconmonstr-trash-can-1.svg' | asset_url }}"></div>
                  </div>
            
            </template>
            <template v-else>
              Your cart is currently empty
            </template>
         </div>
       </transition-group>
         
      
    </div>

    <div class="cart-sidebar">
      <div class="cart-sidebar-top">
        <h2>Your total</h2>
        <div class="cart-total" v-html="cart.formatted_total_price"></div>
      </div>
      <a href="/checkout" class="checkout-btn">
        Checkout
      </a>
    </div>
  </div>

 

    <div class="cart-upsells" v-if="filtered_upsells.length > 0">
      <h2>You might also like...</h2>
      
        <div class="cart-upsells-grid">
          
            <template v-for="(upsell, index) in filtered_upsells" >
              <div class="cart-upsell-item" v-if="index < 4">
                <div class="cart-upsell-title" v-html="upsell.title"></div>
                <img class="cart-upsell-item-image" :src="upsell.image">
                <a v-if="upsell.adding_upsell" class="cart-upsell-atc-btn cart-upsell-atc-btn--adding">Adding...</a> 
                <a v-else class="cart-upsell-atc-btn" @click="addToCart(upsell.variant_id)">Add to cart</a>
              </div>
            </template>
         
        </div>
    </div>

  
</div>

<script>
  const CartPage = {
    data(){
      return {
        cart:{
          items: []
        }, 
        upsells:[
          {% for product in collections['shoes'].products %}
          {
            title: "{{product.title}}",
            handle: "{{ product.handle }}",
            image: "{{product.featured_image | img_url: '400x', scale: 2}}",
            product_id: "{{product.id}}",
            variant_id: "{{product.selected_or_first_available_variant.id}}",
            adding_upsell: false
          },
          {%endfor%}
        ],
        loading: true
      }
    },
    created(){
      $.get('/cart.js')
      .then(response => JSON.parse(response))
      .then(cart => {
        this.setCart(cart);
      })
    },

    computed:{
      filtered_upsells(){
        const products_in_cart = this.cart.items.map(item => item.product_id.toString());
        return this.upsells.filter(upsell => !products_in_cart.includes(upsell.product_id));
      }
    },

    methods:{
      getCart(){
      $.get('/cart.js')
      .then(response => JSON.parse(response))
      .then(cart => {
        this.setCart(cart);
        })
      },

      updateCart(id, qty){
        $.post('/cart/update.js', `updates[${id}]=${qty}`)
        .then(response => JSON.parse(response))
        .then(cart => {
        this.setCart(cart)
        })
      },

      setCart(cart){
        this.cart = cart
        this.formatPrices()
        this.loading= false
      },

      deleteProduct(id){
        this.loading= true
          this.updateCart(id, 0)
      }, 

      addToCart(id){
        const upsell = this.upsells.find(upsell => upsell.variant_id == id);
        this.loading= true;
        upsell.adding_upsell = true;
        $.post('/cart/add.js', {
          items:[
            {
              id,
              quantity:1
            }
          ]
        })
        .then(response => JSON.parse(response))
        .then(items => {
          this.getCart();
          upsell.adding_upsell = false;
        })
      },

      formatPrices(){
        this.cart.items.forEach(item => {
          item.formatted_line_price = Shopify.formatMoney(item.line_price)
        })
        this.cart.formatted_total_price = Shopify.formatMoney(this.cart.total_price)
      }
    }
  }

  Vue.createApp(CartPage).mount('#cart-page');
</script>

<!-- todo transition-group
https://jsfiddle.net/andrisv/3g46bzk7/
-->